'''python
class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if not digits:
            return []
            
        l = []
        for x in digits:
            if x == '2':
                l.append('abc')
            elif x == '3':
                l.append('def')
            elif x == '4':
                l.append('ghi')
            elif x == '5':
                l.append('jkl')
            elif x == '6':
                l.append('mno')
            elif x == '7':
                l.append('pqrs')
            elif x == '8':
                l.append('tuv')
            elif x == '9':
                l.append('wxyz')

        
        
        result = list(l[0])
        l = l[1:]
        for a in l:
            temp = []
            for x in result:
                for y in a:
                    temp.append(x+y)
            result = temp
        
        return result
'''


'''python
class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if not digits:
            return []
            
        digits_mapping = {
            '2': 'abc',
            '3': 'def',
            '4': 'ghi',
            '5': 'jkl',
            '6': 'mno',
            '7': 'pqrs',
            '8': 'tuv',
            '9': 'wxyz'
        }



        def f(idx, comb):
            if idx == len(digits):
                result.append(comb)
                return
            
            for x in digits_mapping[digits[idx]]:
                f(idx + 1, comb + x)

        result = []
        f(0,"")

        return result
'''
